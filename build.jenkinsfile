pipeline {
    agent any

    environment {
        DOCKER_REGISTRY_CREDENTIALS = 'docker' // Name of the Jenkins credentials for Docker registry
        DOCKER_IMAGE_NAME = 'jenkinsdocker'
        DOCKERHUB_REGISTRY = 'docker.io' // DockerHub registry
        TAG = "${env.BUILD_NUMBER}" // Use BUILD_NUMBER to tag the image
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Login to Docker registry
                    withCredentials([usernamePassword(credentialsId: DOCKER_REGISTRY_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        def loginCmd = "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                        def buildCmd = "docker build -t ${DOCKER_IMAGE_NAME}:${TAG} ."
                        def tagCmd = "docker tag ${DOCKER_IMAGE_NAME}:${TAG} ${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${TAG}"
                        def pushCmd = "docker push ${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${TAG}"

                        try {
                            sh returnStatus: true, script: loginCmd
                            sh returnStatus: true, script: buildCmd
                            sh returnStatus: true, script: tagCmd
                            sh returnStatus: true, script: pushCmd
                        } catch (Exception e) {
                            echo "An error occurred: ${e.message}"
                            currentBuild.result = 'FAILURE'
                        }
                    }
                }
            }
        }
    }
}
